syntax = "proto2";

message stream {
    required string name        = 1;
    required int32  coarse      = 2;
    optional bool   ctrl        = 3;
    optional bool   split       = 4;
}

message parameter {
    required int32 batch_size  = 20;
    required int32 rows_in     = 1;
    required int32 cols_in     = 2;
    required int32 channels_in = 3;
    required int32 rows_out     = 4;
    required int32 cols_out     = 5;
    required int32 channels_out = 6;
    required int32 coarse_in    = 7;
    required int32 coarse_out   = 8;
    optional int32 coarse       = 21;
    optional int32 filters  = 9;
    optional int32 pad        = 10;
    optional int32 pad_top    = 11;
    optional int32 pad_right  = 12;
    optional int32 pad_bottom = 13;
    optional int32 pad_left   = 14;
    optional int32 stride   = 15;
    optional int32 groups   = 16;
    optional int32 kernel_size  = 17;
    optional int32 fine         = 18;
    required int32 buffer_depth  = 19 [default = 2];
    optional bool  matmul_flag   = 31;
    //Early Exit additions
    optional string ctrledge        = 22;
    optional bool drop_mode         = 23;
    optional int32 ports_in         = 24;
    optional int32 ports_out        = 25;
    optional float threshold        = 26;
    optional int32 ctrl_out_size    = 27;
    repeated string ctrledges       = 28;
}

message layer {
    required string name    = 1;
    repeated stream streams_in  = 2;
    repeated stream streams_out = 3;
    required parameter parameters = 7;

    repeated string node_in = 8;
    repeated string node_out = 9;

    enum layer_type {
        CONVOLUTION     = 0;
        POOLING         = 1;
        RELU            = 2;
        SQUEEZE         = 3;
        INNER_PRODUCT   = 4;
        CONCAT          = 5;
        BATCH_NORM      = 6;
        SPLIT           = 7;
        //EE additions
        IF              = 8;
        REDUCEMAX       = 9;
        GREATER         = 10;
        IDENTITY        = 11;
        BUFFER          = 12;
    }
    
    required layer_type type = 4;

    optional string weights_path = 5;
    optional string bias_path    = 6;
}

message partition {
    required int32  id = 1;
    required int32  ports = 2;
    required int32  batch_size = 3;
    required string input_node  = 4;
    required string output_node = 5;
    required int32  weights_reloading_factor = 6;
    required string weights_reloading_layer  = 7;
    
    repeated layer layers = 8;
}

message partitions {
    repeated partition partition = 1;
}

