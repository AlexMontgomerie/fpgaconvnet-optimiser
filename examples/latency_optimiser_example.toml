[general]
logging = false
resource_allocation = 0.95
runtime_parameters = false
weight_storage = "double_buffer" # [ double_buffer, stream, share ]

[transforms.fine]
apply_transform = true
probability = 0.25
start_complete = true

[transforms.coarse]
apply_transform = true
probability = 0.25

[transforms.shape]
apply_transform = true
probability = 0.25
method = "inherit" # [ random, inherit ]
start_min = true # initialise all building blocks with the smallest shapes

[transforms.combine]
apply_transform = true
probability = 0.25
num_nodes = 2 # (max) number of nodes to combine at a time
start_combine_all = true # combine all layer types at the start
# TODO: add some discrimination flags

[transforms.seperate]
apply_transform = true
probability = 0.25
allowed_types = [ "Conv", "Gemm", "MaxPool" ] # types that can be seperated
num_nodes = 2 # (max) number of nodes to combine at a time

[annealing]
T = 10.0
T_min = 0.0001
k = 10.0
cool = 0.98
transform_iterations = 15
